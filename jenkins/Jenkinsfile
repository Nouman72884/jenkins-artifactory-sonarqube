pipeline {
    agent any
    // tools {
    //     maven 'maven'
    //     jdk 'jdk'
    // }
    stages {
        // stage('SonarQube analysis') {
        //     steps {
        //         withSonarQubeEnv('sonar') {
        //             sh "mvn clean package sonar:sonar"
        //         }
        //     }
        // }
        // stage("Quality gate") {
        //     steps {
        //         waitForQualityGate abortPipeline: true
        //     }
        // }
        stage('Build') {
            steps {
                //sh 'mvn clean install -Dv=${BUILD_NUMBER} -Dartifactory.publish.artifacts=true -Dartifactory.publish.buildInfo=true'
                sh 'mvn clean package'
                //sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Test Path') {
            steps {
                sh 'pwd'
                sh 'ls target/'
            }
        }
        stage ('Publish Artifacts') {
        steps {
            rtUpload (
                buildName: JOB_NAME,
                buildNumber: BUILD_NUMBER,
                serverId: "artifactory", // Obtain an Artifactory server instance, defined in Jenkins --> Manage:
                spec: """{
                            "files": [
                                {
                                    "pattern": "target/my-app-1.0-SNAPSHOT.jar",
                                    "target": "maven_local/my-app-1.0-SNAPSHOT.${BUILD_NUMBER}.jar",
                                    "recursive": "true"
                                }
                            ]
                    }"""   
                )
        }
     } 
  }
}
  